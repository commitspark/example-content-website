# Must be declared for valid schema
directive @Entry on OBJECT

# A type with `@Entry` directive exists on its own and can be referenced elsewhere
type Page @Entry {
    id: ID! # This field is required for all types with `@Entry` directive
    title: String!
    contentElements: [ContentElement!]!
    slug: String!
    seo: SEO
}

# Individual pieces of content that make up a page; extend this with additional elements as needed
union ContentElement =
    | Hero
    | SectionTitle
    | Body

# Types that don't have @Entry can only exist as siblings of an @Entry type and don't have their own identity
type Hero {
    heading: String!
    image: ImageReference
    imagePosition: ImagePosition
}

type SectionTitle {
    heading: String!
    body: String!
}

type ImageReference {
    filePath: String!
}

enum ImagePosition {
    aboveHeading
    belowHeading
}

# Our header exists independent of pages and therefore gets its own @Entry identity
type Header @Entry {
    id: ID!
    logo: ImageReference
    navigationMenus: [NavigationMenu!]
}

type NavigationMenu {
    menuEntries: [NavigationMenuEntry!]!
}

type NavigationMenuEntry {
    label: String!
    linkTo: Page # `Page` has `@Entry` so this is stored as a reference using the Page's `id`
}

type Body {
    body: String!
}

type SEO {
    metaTags: [MetaTag!]!
    # This is just an example; extend with additional fields as needed
}

type MetaTag {
    name: String!
    value: String!
}
